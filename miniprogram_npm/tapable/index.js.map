{"version":3,"sources":["Tapable.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n// polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n// using the polyfill specifically to avoid the call to `Object.defineProperty` for performance reasons\nfunction fastFilter(fun/*, thisArg*/) {\n\t\n\n\tif (this === void 0 || this === null) {\n\t\tthrow new TypeError();\n\t}\n\n\tvar t = Object(this);\n\tvar len = t.length >>> 0;\n\tif (typeof fun !== 'function') {\n\t\tthrow new TypeError();\n\t}\n\n\tvar res = [];\n\tvar thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\tfor (var i = 0; i < len; i++) {\n\t\tif (i in t) {\n\t\t\tvar val = t[i];\n\n\t\t\t// NOTE: Technically this should Object.defineProperty at\n\t\t\t//       the next index, as push can be affected by\n\t\t\t//       properties on Object.prototype and Array.prototype.\n\t\t\t//       But that method's new, and collisions should be\n\t\t\t//       rare, so use the more-compatible alternative.\n\t\t\tif (fun.call(thisArg, val, i, t)) {\n\t\t\t\tres.push(val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn res;\n}\n\nfunction Tapable() {\n\tthis._plugins = {};\n}\nmodule.exports = Tapable;\n\nfunction copyProperties(from, to) {\n\tfor(var key in from)\n\t\tto[key] = from[key];\n\treturn to;\n}\n\nTapable.mixin = function mixinTapable(pt) {\n\tcopyProperties(Tapable.prototype, pt);\n};\n\nTapable.prototype.applyPlugins = function applyPlugins(name) {\n\tif(!this._plugins[name]) return;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tplugins[i].apply(this, args);\n};\n\nTapable.prototype.applyPlugins0 = function applyPlugins0(name) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins) return;\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tplugins[i].call(this);\n};\n\nTapable.prototype.applyPlugins1 = function applyPlugins1(name, param) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins) return;\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tplugins[i].call(this, param);\n};\n\nTapable.prototype.applyPlugins2 = function applyPlugins2(name, param1, param2) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins) return;\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tplugins[i].call(this, param1, param2);\n};\n\nTapable.prototype.applyPluginsWaterfall = function applyPluginsWaterfall(name, init) {\n\tif(!this._plugins[name]) return init;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar plugins = this._plugins[name];\n\tvar current = init;\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\targs[0] = current;\n\t\tcurrent = plugins[i].apply(this, args);\n\t}\n\treturn current;\n};\n\nTapable.prototype.applyPluginsWaterfall0 = function applyPluginsWaterfall0(name, init) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins) return init;\n\tvar current = init;\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tcurrent = plugins[i].call(this, current);\n\treturn current;\n};\n\nTapable.prototype.applyPluginsWaterfall1 = function applyPluginsWaterfall1(name, init, param) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins) return init;\n\tvar current = init;\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tcurrent = plugins[i].call(this, current, param);\n\treturn current;\n};\n\nTapable.prototype.applyPluginsWaterfall2 = function applyPluginsWaterfall2(name, init, param1, param2) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins) return init;\n\tvar current = init;\n\tfor(var i = 0; i < plugins.length; i++)\n\t\tcurrent = plugins[i].call(this, current, param1, param2);\n\treturn current;\n};\n\nTapable.prototype.applyPluginsBailResult = function applyPluginsBailResult(name) {\n\tif(!this._plugins[name]) return;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar result = plugins[i].apply(this, args);\n\t\tif(typeof result !== \"undefined\") {\n\t\t\treturn result;\n\t\t}\n\t}\n};\n\nTapable.prototype.applyPluginsBailResult1 = function applyPluginsBailResult1(name, param) {\n\tif(!this._plugins[name]) return;\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar result = plugins[i].call(this, param);\n\t\tif(typeof result !== \"undefined\") {\n\t\t\treturn result;\n\t\t}\n\t}\n};\n\nTapable.prototype.applyPluginsBailResult2 = function applyPluginsBailResult2(name, param1, param2) {\n\tif(!this._plugins[name]) return;\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar result = plugins[i].call(this, param1, param2);\n\t\tif(typeof result !== \"undefined\") {\n\t\t\treturn result;\n\t\t}\n\t}\n};\n\nTapable.prototype.applyPluginsBailResult3 = function applyPluginsBailResult3(name, param1, param2, param3) {\n\tif(!this._plugins[name]) return;\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar result = plugins[i].call(this, param1, param2, param3);\n\t\tif(typeof result !== \"undefined\") {\n\t\t\treturn result;\n\t\t}\n\t}\n};\n\nTapable.prototype.applyPluginsBailResult4 = function applyPluginsBailResult4(name, param1, param2, param3, param4) {\n\tif(!this._plugins[name]) return;\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar result = plugins[i].call(this, param1, param2, param3, param4);\n\t\tif(typeof result !== \"undefined\") {\n\t\t\treturn result;\n\t\t}\n\t}\n};\n\nTapable.prototype.applyPluginsBailResult5 = function applyPluginsBailResult5(name, param1, param2, param3, param4, param5) {\n\tif(!this._plugins[name]) return;\n\tvar plugins = this._plugins[name];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar result = plugins[i].call(this, param1, param2, param3, param4, param5);\n\t\tif(typeof result !== \"undefined\") {\n\t\t\treturn result;\n\t\t}\n\t}\n};\n\nTapable.prototype.applyPluginsAsyncSeries = Tapable.prototype.applyPluginsAsync = function applyPluginsAsyncSeries(name) {\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar callback = args.pop();\n\tvar plugins = this._plugins[name];\n\tif(!plugins || plugins.length === 0) return callback();\n\tvar i = 0;\n\tvar _this = this;\n\targs.push(copyProperties(callback, function next(err) {\n\t\tif(err) return callback(err);\n\t\ti++;\n\t\tif(i >= plugins.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tplugins[i].apply(_this, args);\n\t}));\n\tplugins[0].apply(this, args);\n};\n\nTapable.prototype.applyPluginsAsyncSeries1 = function applyPluginsAsyncSeries1(name, param, callback) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins || plugins.length === 0) return callback();\n\tvar i = 0;\n\tvar _this = this;\n\tvar innerCallback = copyProperties(callback, function next(err) {\n\t\tif(err) return callback(err);\n\t\ti++;\n\t\tif(i >= plugins.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tplugins[i].call(_this, param, innerCallback);\n\t});\n\tplugins[0].call(this, param, innerCallback);\n};\n\nTapable.prototype.applyPluginsAsyncSeriesBailResult = function applyPluginsAsyncSeriesBailResult(name) {\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar callback = args.pop();\n\tif(!this._plugins[name] || this._plugins[name].length === 0) return callback();\n\tvar plugins = this._plugins[name];\n\tvar i = 0;\n\tvar _this = this;\n\targs.push(copyProperties(callback, function next() {\n\t\tif(arguments.length > 0) return callback.apply(null, arguments);\n\t\ti++;\n\t\tif(i >= plugins.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tplugins[i].apply(_this, args);\n\t}));\n\tplugins[0].apply(this, args);\n};\n\nTapable.prototype.applyPluginsAsyncSeriesBailResult1 = function applyPluginsAsyncSeriesBailResult1(name, param, callback) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins || plugins.length === 0) return callback();\n\tvar i = 0;\n\tvar _this = this;\n\tvar innerCallback = copyProperties(callback, function next(err, result) {\n\t\tif(arguments.length > 0) return callback(err, result);\n\t\ti++;\n\t\tif(i >= plugins.length) {\n\t\t\treturn callback();\n\t\t}\n\t\tplugins[i].call(_this, param, innerCallback);\n\t});\n\tplugins[0].call(this, param, innerCallback);\n};\n\nTapable.prototype.applyPluginsAsyncWaterfall = function applyPluginsAsyncWaterfall(name, init, callback) {\n\tif(!this._plugins[name] || this._plugins[name].length === 0) return callback(null, init);\n\tvar plugins = this._plugins[name];\n\tvar i = 0;\n\tvar _this = this;\n\tvar next = copyProperties(callback, function(err, value) {\n\t\tif(err) return callback(err);\n\t\ti++;\n\t\tif(i >= plugins.length) {\n\t\t\treturn callback(null, value);\n\t\t}\n\t\tplugins[i].call(_this, value, next);\n\t});\n\tplugins[0].call(this, init, next);\n};\n\nTapable.prototype.applyPluginsParallel = function applyPluginsParallel(name) {\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar callback = args.pop();\n\tif(!this._plugins[name] || this._plugins[name].length === 0) return callback();\n\tvar plugins = this._plugins[name];\n\tvar remaining = plugins.length;\n\targs.push(copyProperties(callback, function(err) {\n\t\tif(remaining < 0) return; // ignore\n\t\tif(err) {\n\t\t\tremaining = -1;\n\t\t\treturn callback(err);\n\t\t}\n\t\tremaining--;\n\t\tif(remaining === 0) {\n\t\t\treturn callback();\n\t\t}\n\t}));\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tplugins[i].apply(this, args);\n\t\tif(remaining < 0) return;\n\t}\n};\n\nTapable.prototype.applyPluginsParallelBailResult = function applyPluginsParallelBailResult(name) {\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar callback = args[args.length - 1];\n\tif(!this._plugins[name] || this._plugins[name].length === 0) return callback();\n\tvar plugins = this._plugins[name];\n\tvar currentPos = plugins.length;\n\tvar currentResult;\n\tvar done = [];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\targs[args.length - 1] = (function(i) {\n\t\t\treturn copyProperties(callback, function() {\n\t\t\t\tif(i >= currentPos) return; // ignore\n\t\t\t\tdone.push(i);\n\t\t\t\tif(arguments.length > 0) {\n\t\t\t\t\tcurrentPos = i + 1;\n\t\t\t\t\tdone = fastFilter.call(done, function(item) {\n\t\t\t\t\t\treturn item <= i;\n\t\t\t\t\t});\n\t\t\t\t\tcurrentResult = Array.prototype.slice.call(arguments);\n\t\t\t\t}\n\t\t\t\tif(done.length === currentPos) {\n\t\t\t\t\tcallback.apply(null, currentResult);\n\t\t\t\t\tcurrentPos = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}(i));\n\t\tplugins[i].apply(this, args);\n\t}\n};\n\nTapable.prototype.applyPluginsParallelBailResult1 = function applyPluginsParallelBailResult1(name, param, callback) {\n\tvar plugins = this._plugins[name];\n\tif(!plugins || plugins.length === 0) return callback();\n\tvar currentPos = plugins.length;\n\tvar currentResult;\n\tvar done = [];\n\tfor(var i = 0; i < plugins.length; i++) {\n\t\tvar innerCallback = (function(i) {\n\t\t\treturn copyProperties(callback, function() {\n\t\t\t\tif(i >= currentPos) return; // ignore\n\t\t\t\tdone.push(i);\n\t\t\t\tif(arguments.length > 0) {\n\t\t\t\t\tcurrentPos = i + 1;\n\t\t\t\t\tdone = fastFilter.call(done, function(item) {\n\t\t\t\t\t\treturn item <= i;\n\t\t\t\t\t});\n\t\t\t\t\tcurrentResult = Array.prototype.slice.call(arguments);\n\t\t\t\t}\n\t\t\t\tif(done.length === currentPos) {\n\t\t\t\t\tcallback.apply(null, currentResult);\n\t\t\t\t\tcurrentPos = 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}(i));\n\t\tplugins[i].call(this, param, innerCallback);\n\t}\n};\n\nTapable.prototype.hasPlugins = function hasPlugins(name) {\n\tvar plugins = this._plugins[name];\n\treturn plugins && plugins.length > 0;\n};\n\n\nTapable.prototype.plugin = function plugin(name, fn) {\n\tif(Array.isArray(name)) {\n\t\tname.forEach(function(name) {\n\t\t\tthis.plugin(name, fn);\n\t\t}, this);\n\t\treturn;\n\t}\n\tif(!this._plugins[name]) this._plugins[name] = [fn];\n\telse this._plugins[name].push(fn);\n};\n\nTapable.prototype.apply = function apply() {\n\tfor(var i = 0; i < arguments.length; i++) {\n\t\targuments[i].apply(this);\n\t}\n};\n"]}